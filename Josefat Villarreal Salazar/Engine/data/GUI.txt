------applicationclass.h------
BitmapClass *m_healthbar[5]; <- Es un arreglo de 5 porque tengo 5 imágenes para mi barra de vida
int lifeAux = 0;
char path[255];

------applicationclass.cpp------
~ApplicationClass
	for (int i = 0; i < 5; i++)//ARREGLO DE BITMAPS
	{
		m_healthbar[i] = 0;
	}

~Initialize 
char extensionFileC[] = ".png";
	char healthPath[] = "../Engine/data/GUI/";
	for (int i = 0; i < 5; i++)
	{
		m_healthbar[i] = new BitmapClass;
		if (!m_healthbar[i])
			return false;

		char integer[3] = "";	<- El nombre de mis imágenes va del 1 al 5, así que solo concateno
		itoa(i+1, integer, 10);
		strcpy(path, "");
		strcat(path, healthPath);
		strcat(path, integer);
		strcat(path, extensionFileC);

		size_t origsize = strlen(path) + 1;
		const size_t newsize = 100;
		size_t conertedChars = 0;
		wchar_t wcstring[newsize];
		mbstowcs_s(&conertedChars, wcstring, origsize, path, _TRUNCATE);

		// Initialize the bitmap object.
		result = m_healthbar[i]->Initialize(m_Direct3D->GetDevice(), screenWidth, screenHeight, (WCHAR*)wcstring, 300, 45);
		if (!result)
		{
			MessageBox(hwnd, L"Could not initialize the bitmap object.", L"Error", MB_OK);
			return false;
		}


~Shutdown
	for (int i = 0; i < 5; i++)
	{
		// Release the bitmap object.
		if (m_healthbar[i])
		{
			m_healthbar[i]->Shutdown();
			delete m_healthbar[i];
			m_healthbar[i] = 0;
		}

	}

~Render
	if (isGameStarted && !isGameOver)
	{

		if (life >= 800) {
			lifeAux = 0; ->lifeAux es para ver qué imagen va a dibujar
		}
		else if (life >= 600) {
			lifeAux = 1;
		}
		else if (life >= 400) {
			lifeAux = 2;
		}
		else if (life >= 200) {
			lifeAux = 3;
		}
		else {
			lifeAux = 4;
		}

		result = m_healthbar[lifeAux]->Render(m_Direct3D->GetDeviceContext(), 10, 20);

		if (!result)
			return false;

		result = m_TextureShader->Render(m_Direct3D->GetDeviceContext(), m_healthbar[lifeAux]->GetIndexCount(), worldMatrix, baseViewMatrix, orthoMatrix, m_healthbar[lifeAux]->GetTexture());

		if (!result)
			return false;
	}


		(\ /) Animo!!
		(°x°)
		c(")(")
	
